%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0 0 388 224
%%Creator: yExport 1.5
%%Producer: org.freehep.graphicsio.ps.EPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Thursday, March 2, 2017 12:44:16 PM MSK
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Courier 16#00 vg&newcompositefont
/DialogInput-Bold /Courier-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Courier-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
388 224 setpagesize
0 0 0 0 setmargins
0 0 setorigin
388 224 setsize
naturalsize
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
388.000 0.00000 l
388.000 224.000 l
0.00000 224.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
388.000 0.00000 l
388.000 224.000 l
0.00000 224.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
0 0 388 224 rc
q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] concat
[ 1.00000 0.00000 0.00000 1.00000 -376.000 -342.000 ] concat
1.00000 1.00000 1.00000 RG
newpath
376.000 342.000 m
764.000 342.000 l
764.000 566.000 l
376.000 566.000 l
376.000 342.000 l
h
f
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 -376.000 -342.000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -376.000 -342.000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -376.000 -342.000 ] defaultmatrix matrix concatmatrix setmatrix
q
[ 57.0000 0.00000 0.00000 65.0000 391.723 357.732 ] concat
<<
/ImageType 1
/Width 57  /Height 65
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [57 0 0 65 0 0]
/DataSource currentfile /ASCII85Decode filter /DCTDecode filter 
>> image
s4IA0!"_al8O`[\!WW3$!!*'"s4[N@!!ic5#6k>;#6tJ?#m^kH'FbHY$Odmc'+Yct)BU"@)B9_>,VCGe
+tOrY*%3`p/2/e81c-:%3B]>W4>&EH1B6)/6NIK"#n.1M(_$ok1*IV\1,:U?1,:U?1,:U?1,:U?1,:U?
1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,AmF!"fJ:5l`nI!?qLF&HMtG!WU(<*rl9A"T\W)!<E3$
z!!!!"!WrQ/"pYD?$4HmP!4<@<!W`B*!X&T/"U"r.!!.KK!WrE*&Hrdj0gQ!W;.0\RE>10ZOeE%*6F"?
A;UOtZ1LbBV#mqFa(`=5<-7:2j.Ps"@2`NfY6UX@47n?3D;cHat='/U/@q9._B4u!oF*)PJGBeCZK7nr
5LPUeEP*;,qQC!u,R\HRQV5C/hWN*81['d?O\@K2f_o0O6a2lBFdaQ^rf%8R-g>V&OjQ5OekiqC&o(2M
Hp@n@XqZ"J6*ru?D!<E3%!<E3%!<<*"!!!!"!WrQ/"pYD?$4HmP!4<C=!W`?*"9Sc3"U"r.!<RHF!<N?
8"9fr'"qj4!#@VTc+u4]T'LIqUZ,$_k1K*]W@WKj'(*k`q-1Mcg)&ahL-n-W'2E*TU3^Z;(7Rp!@8lJ\
h<``C+>%;)SAnPdkC3+K>G'A1VH@gd&KnbA=M2II[Pa.Q$R$jD;USO``Vl6SpZEppG[^WcW]#)A'`Q#s
>ai`&\eCE.%f\,!<j5f=akNM0qo(2MHp@n@XqZ#7L$j-M1!YGMH!'^JXqQ$T12VLoqEIW61/`8t`Hi42
K-\+?S>-BgY`Mo>T.o"Le'jI)p=8*#O!WN.N3hO9>30+XGgKF%U_j7j!f$'X1X:A21rm;^jqXNc"RLmI
XE((67i&U`$B%OqhL$jKf]s;pGUo_:&N3aqjYk>iRa1(#0bpk4fZN+A#qp`W*Q0e2n`N@FL6Lhe#TM1)
%\M!88q5nO>\0Ls<3@]KJHQ)WQ)csH!FJq&92C9<.3'7p=$D29^YF9YEgN#*/ik7/,#,]RhWG*p%UEI.
-I0_!'o?)M^7%UYP'Mng:?h#@8rn6grKjcT%%rH8W+2c-+cY[u^@<d]+MI3^T5$hj0h&($S8&k#J=7u<
hE>!8f-QVPh7OhCNAj1jFVO+&]fH]kU;enQO\[mubfd*#iF5]h;j&SlGXaldV&gHAZQnjbIWSmHqDEuK
^jDo+u)Op*r*/a7G?132El:RC9*3B/?%s0b?RV:8sMoJUkAGK^\K=Q"YgSSuX:jbCPoc5-pP=Ka%0oHo
9c@b1t^-$fSZ1Rs0Xa-8iZogPd8Nc`8I%Yb#p$.%'Fl@<t,um;+\V;;]'fRXH`r-TK?Ff3P2:5upUNI!
(#[i"3:9IZ%nX<W-dV1VSDjoKaaX6DZT`CU#rZgbo&h!gPn!@I]bA&<ZZ/G'9[lf2tpni>:=!<;]CRDE
!k20I96ReSp+r<!N3"e,gf_"I=*h68pCA'u4/ZbSioI@Asf/;St1<RaEe<T%err=_C4ZXI7(:e0A8T4T
?P]A(he1_1D"KiE^Dn68SB<WGbgY5rQBl9##0Sh^7IoBZFi]3jFYt/Co7@HZ%@oJu48O)Y*\j$Z!hC'N
_)TS;I$i)6!h_Hn$,Kr;MN.JM.HBKen$\=TZ5J6c`i4BtOnWCc)h>Aen45)+uK.(:RW>Pg[#c4]!"-W1
4V^:HZBQfP$BW<!EA2k`.8C[>YE_g,)>,8T'M^*!U.RgS7<>Y^G'q:sjA@@W`DtMYHhX*kO/>W3ZNnEP
YJ?<C1$39(D9![][n[pfHm#Xo(%R53M7jB.9^iZ[bTb7+/9VL:=!8R8NoZt%gi,MWhL'NHKM%H5eC)Iu
fPG$'ZU"V^Cmo'Ummdu?K6-Q1e?XLH:rftBh<op(n^@s_[at?\j-/.8.q/nIcBc[^ac5G<20rm(2BLuf
#.fMC:<pUuO[!t+\N@^+/)[,)j1QQ?P&Du3u,e8"EabE27hLPpSU[$Tpd!O@!L:oY>kG[HeFCE9c7+(L
a[+\7PH:>`8@rg51Aj>Qkroa0\gX,KI]b7tf;)/$0:Gu!"!Kc6tW>pLQo8H_*r$<EsJ*70qp^V'a;k!K
brr=:NrrD`;5Q(^d%n.04='',9!$6*/f/<P,;-kSln3b_"E\HEJd-#?I!9=&spWZa5MY3ot$9jC=4H)f
#Vs=9^1OHrFni:Dkp%"a#^6YLNeAVC?~>
Q
q
[ 57.0000 0.00000 0.00000 65.0000 631.723 477.732 ] concat
<<
/ImageType 1
/Width 57  /Height 65
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [57 0 0 65 0 0]
/DataSource currentfile /ASCII85Decode filter /DCTDecode filter 
>> image
s4IA0!"_al8O`[\!WW3$!!*'"s4[N@!!ic5#6k>;#6tJ?#m^kH'FbHY$Odmc'+Yct)BU"@)B9_>,VCGe
+tOrY*%3`p/2/e81c-:%3B]>W4>&EH1B6)/6NIK"#n.1M(_$ok1*IV\1,:U?1,:U?1,:U?1,:U?1,:U?
1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,AmF!"fJ:5l`nI!?qLF&HMtG!WU(<*rl9A"T\W)!<E3$
z!!!!"!WrQ/"pYD?$4HmP!4<@<!W`B*!X&T/"U"r.!!.KK!WrE*&Hrdj0gQ!W;.0\RE>10ZOeE%*6F"?
A;UOtZ1LbBV#mqFa(`=5<-7:2j.Ps"@2`NfY6UX@47n?3D;cHat='/U/@q9._B4u!oF*)PJGBeCZK7nr
5LPUeEP*;,qQC!u,R\HRQV5C/hWN*81['d?O\@K2f_o0O6a2lBFdaQ^rf%8R-g>V&OjQ5OekiqC&o(2M
Hp@n@XqZ"J6*ru?D!<E3%!<E3%!<<*"!!!!"!WrQ/"pYD?$4HmP!4<C=!W`?*"9Sc3"U"r.!<RHF!<N?
8"9fr'"qj4!#@VTc+u4]T'LIqUZ,$_k1K*]W@WKj'(*k`q-1Mcg)&ahL-n-W'2E*TU3^Z;(7Rp!@8lJ\
h<``C+>%;)SAnPdkC3+K>G'A1VH@gd&KnbA=M2II[Pa.Q$R$jD;USO``Vl6SpZEppG[^WcW]#)A'`Q#s
>ai`&\eCE.%f\,!<j5f=akNM0qo(2MHp@n@XqZ#7L$j-M1!YGMH!'^JXqQ$T12VLoqEIW61/`8t`Hi42
K-\+?S>-BgY`Mo>T.o"Le'jI)p=8*#O!WN.N3hO9>30+XGgKF%U_j7j!f$'X1X:A21rm;^jqXNc"RLmI
XE((67i&U`$B%OqhL$jKf]s;pGUo_:&N3aqjYk>iRa1(#0bpk4fZN+A#qp`W*Q0e2n`N@FL6Lhe#TM1)
%\M!88q5nO>\0Ls<3@]KJHQ)WQ)csH!FJq&92C9<.3'7p=$D29^YF9YEgN#*/ik7/,#,]RhWG*p%UEI.
-I0_!'o?)M^7%UYP'Mng:?h#@8rn6grKjcT%%rH8W+2c-+cY[u^@<d]+MI3^T5$hj0h&($S8&k#J=7u<
hE>!8f-QVPh7OhCNAj1jFVO+&]fH]kU;enQO\[mubfd*#iF5]h;j&SlGXaldV&gHAZQnjbIWSmHqDEuK
^jDo+u)Op*r*/a7G?132El:RC9*3B/?%s0b?RV:8sMoJUkAGK^\K=Q"YgSSuX:jbCPoc5-pP=Ka%0oHo
9c@b1t^-$fSZ1Rs0Xa-8iZogPd8Nc`8I%Yb#p$.%'Fl@<t,um;+\V;;]'fRXH`r-TK?Ff3P2:5upUNI!
(#[i"3:9IZ%nX<W-dV1VSDjoKaaX6DZT`CU#rZgbo&h!gPn!@I]bA&<ZZ/G'9[lf2tpni>:=!<;]CRDE
!k20I96ReSp+r<!N3"e,gf_"I=*h68pCA'u4/ZbSioI@Asf/;St1<RaEe<T%err=_C4ZXI7(:e0A8T4T
?P]A(he1_1D"KiE^Dn68SB<WGbgY5rQBl9##0Sh^7IoBZFi]3jFYt/Co7@HZ%@oJu48O)Y*\j$Z!hC'N
_)TS;I$i)6!h_Hn$,Kr;MN.JM.HBKen$\=TZ5J6c`i4BtOnWCc)h>Aen45)+uK.(:RW>Pg[#c4]!"-W1
4V^:HZBQfP$BW<!EA2k`.8C[>YE_g,)>,8T'M^*!U.RgS7<>Y^G'q:sjA@@W`DtMYHhX*kO/>W3ZNnEP
YJ?<C1$39(D9![][n[pfHm#Xo(%R53M7jB.9^iZ[bTb7+/9VL:=!8R8NoZt%gi,MWhL'NHKM%H5eC)Iu
fPG$'ZU"V^Cmo'Ummdu?K6-Q1e?XLH:rftBh<op(n^@s_[at?\j-/.8.q/nIcBc[^ac5G<20rm(2BLuf
#.fMC:<pUuO[!t+\N@^+/)[,)j1QQ?P&Du3u,e8"EabE27hLPpSU[$Tpd!O@!L:oY>kG[HeFCE9c7+(L
a[+\7PH:>`8@rg51Aj>Qkroa0\gX,KI]b7tf;)/$0:Gu!"!Kc6tW>pLQo8H_*r$<EsJ*70qp^V'a;k!K
brr=:NrrD`;5Q(^d%n.04='',9!$6*/f/<P,;-kSln3b_"E\HEJd-#?I!9=&spWZa5MY3ot$9jC=4H)f
#Vs=9^1OHrFni:Dkp%"a#^6YLNeAVC?~>
Q
q
[ 57.0000 0.00000 0.00000 65.0000 661.723 447.732 ] concat
<<
/ImageType 1
/Width 57  /Height 65
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [57 0 0 65 0 0]
/DataSource currentfile /ASCII85Decode filter /DCTDecode filter 
>> image
s4IA0!"_al8O`[\!WW3$!!*'"s4[N@!!ic5#6k>;#6tJ?#m^kH'FbHY$Odmc'+Yct)BU"@)B9_>,VCGe
+tOrY*%3`p/2/e81c-:%3B]>W4>&EH1B6)/6NIK"#n.1M(_$ok1*IV\1,:U?1,:U?1,:U?1,:U?1,:U?
1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,AmF!"fJ:5l`nI!?qLF&HMtG!WU(<*rl9A"T\W)!<E3$
z!!!!"!WrQ/"pYD?$4HmP!4<@<!W`B*!X&T/"U"r.!!.KK!WrE*&Hrdj0gQ!W;.0\RE>10ZOeE%*6F"?
A;UOtZ1LbBV#mqFa(`=5<-7:2j.Ps"@2`NfY6UX@47n?3D;cHat='/U/@q9._B4u!oF*)PJGBeCZK7nr
5LPUeEP*;,qQC!u,R\HRQV5C/hWN*81['d?O\@K2f_o0O6a2lBFdaQ^rf%8R-g>V&OjQ5OekiqC&o(2M
Hp@n@XqZ"J6*ru?D!<E3%!<E3%!<<*"!!!!"!WrQ/"pYD?$4HmP!4<C=!W`?*"9Sc3"U"r.!<RHF!<N?
8"9fr'"qj4!#@VTc+u4]T'LIqUZ,$_k1K*]W@WKj'(*k`q-1Mcg)&ahL-n-W'2E*TU3^Z;(7Rp!@8lJ\
h<``C+>%;)SAnPdkC3+K>G'A1VH@gd&KnbA=M2II[Pa.Q$R$jD;USO``Vl6SpZEppG[^WcW]#)A'`Q#s
>ai`&\eCE.%f\,!<j5f=akNM0qo(2MHp@n@XqZ#7L$j-M1!YGMH!'^JXqQ$T12VLoqEIW61/`8t`Hi42
K-\+?S>-BgY`Mo>T.o"Le'jI)p=8*#O!WN.N3hO9>30+XGgKF%U_j7j!f$'X1X:A21rm;^jqXNc"RLmI
XE((67i&U`$B%OqhL$jKf]s;pGUo_:&N3aqjYk>iRa1(#0bpk4fZN+A#qp`W*Q0e2n`N@FL6Lhe#TM1)
%\M!88q5nO>\0Ls<3@]KJHQ)WQ)csH!FJq&92C9<.3'7p=$D29^YF9YEgN#*/ik7/,#,]RhWG*p%UEI.
-I0_!'o?)M^7%UYP'Mng:?h#@8rn6grKjcT%%rH8W+2c-+cY[u^@<d]+MI3^T5$hj0h&($S8&k#J=7u<
hE>!8f-QVPh7OhCNAj1jFVO+&]fH]kU;enQO\[mubfd*#iF5]h;j&SlGXaldV&gHAZQnjbIWSmHqDEuK
^jDo+u)Op*r*/a7G?132El:RC9*3B/?%s0b?RV:8sMoJUkAGK^\K=Q"YgSSuX:jbCPoc5-pP=Ka%0oHo
9c@b1t^-$fSZ1Rs0Xa-8iZogPd8Nc`8I%Yb#p$.%'Fl@<t,um;+\V;;]'fRXH`r-TK?Ff3P2:5upUNI!
(#[i"3:9IZ%nX<W-dV1VSDjoKaaX6DZT`CU#rZgbo&h!gPn!@I]bA&<ZZ/G'9[lf2tpni>:=!<;]CRDE
!k20I96ReSp+r<!N3"e,gf_"I=*h68pCA'u4/ZbSioI@Asf/;St1<RaEe<T%err=_C4ZXI7(:e0A8T4T
?P]A(he1_1D"KiE^Dn68SB<WGbgY5rQBl9##0Sh^7IoBZFi]3jFYt/Co7@HZ%@oJu48O)Y*\j$Z!hC'N
_)TS;I$i)6!h_Hn$,Kr;MN.JM.HBKen$\=TZ5J6c`i4BtOnWCc)h>Aen45)+uK.(:RW>Pg[#c4]!"-W1
4V^:HZBQfP$BW<!EA2k`.8C[>YE_g,)>,8T'M^*!U.RgS7<>Y^G'q:sjA@@W`DtMYHhX*kO/>W3ZNnEP
YJ?<C1$39(D9![][n[pfHm#Xo(%R53M7jB.9^iZ[bTb7+/9VL:=!8R8NoZt%gi,MWhL'NHKM%H5eC)Iu
fPG$'ZU"V^Cmo'Ummdu?K6-Q1e?XLH:rftBh<op(n^@s_[at?\j-/.8.q/nIcBc[^ac5G<20rm(2BLuf
#.fMC:<pUuO[!t+\N@^+/)[,)j1QQ?P&Du3u,e8"EabE27hLPpSU[$Tpd!O@!L:oY>kG[HeFCE9c7+(L
a[+\7PH:>`8@rg51Aj>Qkroa0\gX,KI]b7tf;)/$0:Gu!"!Kc6tW>pLQo8H_*r$<EsJ*70qp^V'a;k!K
brr=:NrrD`;5Q(^d%n.04='',9!$6*/f/<P,;-kSln3b_"E\HEJd-#?I!9=&spWZa5MY3ot$9jC=4H)f
#Vs=9^1OHrFni:Dkp%"a#^6YLNeAVC?~>
Q
q
[ 57.0000 0.00000 0.00000 65.0000 691.723 477.732 ] concat
<<
/ImageType 1
/Width 57  /Height 65
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [57 0 0 65 0 0]
/DataSource currentfile /ASCII85Decode filter /DCTDecode filter 
>> image
s4IA0!"_al8O`[\!WW3$!!*'"s4[N@!!ic5#6k>;#6tJ?#m^kH'FbHY$Odmc'+Yct)BU"@)B9_>,VCGe
+tOrY*%3`p/2/e81c-:%3B]>W4>&EH1B6)/6NIK"#n.1M(_$ok1*IV\1,:U?1,:U?1,:U?1,:U?1,:U?
1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,AmF!"fJ:5l`nI!?qLF&HMtG!WU(<*rl9A"T\W)!<E3$
z!!!!"!WrQ/"pYD?$4HmP!4<@<!W`B*!X&T/"U"r.!!.KK!WrE*&Hrdj0gQ!W;.0\RE>10ZOeE%*6F"?
A;UOtZ1LbBV#mqFa(`=5<-7:2j.Ps"@2`NfY6UX@47n?3D;cHat='/U/@q9._B4u!oF*)PJGBeCZK7nr
5LPUeEP*;,qQC!u,R\HRQV5C/hWN*81['d?O\@K2f_o0O6a2lBFdaQ^rf%8R-g>V&OjQ5OekiqC&o(2M
Hp@n@XqZ"J6*ru?D!<E3%!<E3%!<<*"!!!!"!WrQ/"pYD?$4HmP!4<C=!W`?*"9Sc3"U"r.!<RHF!<N?
8"9fr'"qj4!#@VTc+u4]T'LIqUZ,$_k1K*]W@WKj'(*k`q-1Mcg)&ahL-n-W'2E*TU3^Z;(7Rp!@8lJ\
h<``C+>%;)SAnPdkC3+K>G'A1VH@gd&KnbA=M2II[Pa.Q$R$jD;USO``Vl6SpZEppG[^WcW]#)A'`Q#s
>ai`&\eCE.%f\,!<j5f=akNM0qo(2MHp@n@XqZ#7L$j-M1!YGMH!'^JXqQ$T12VLoqEIW61/`8t`Hi42
K-\+?S>-BgY`Mo>T.o"Le'jI)p=8*#O!WN.N3hO9>30+XGgKF%U_j7j!f$'X1X:A21rm;^jqXNc"RLmI
XE((67i&U`$B%OqhL$jKf]s;pGUo_:&N3aqjYk>iRa1(#0bpk4fZN+A#qp`W*Q0e2n`N@FL6Lhe#TM1)
%\M!88q5nO>\0Ls<3@]KJHQ)WQ)csH!FJq&92C9<.3'7p=$D29^YF9YEgN#*/ik7/,#,]RhWG*p%UEI.
-I0_!'o?)M^7%UYP'Mng:?h#@8rn6grKjcT%%rH8W+2c-+cY[u^@<d]+MI3^T5$hj0h&($S8&k#J=7u<
hE>!8f-QVPh7OhCNAj1jFVO+&]fH]kU;enQO\[mubfd*#iF5]h;j&SlGXaldV&gHAZQnjbIWSmHqDEuK
^jDo+u)Op*r*/a7G?132El:RC9*3B/?%s0b?RV:8sMoJUkAGK^\K=Q"YgSSuX:jbCPoc5-pP=Ka%0oHo
9c@b1t^-$fSZ1Rs0Xa-8iZogPd8Nc`8I%Yb#p$.%'Fl@<t,um;+\V;;]'fRXH`r-TK?Ff3P2:5upUNI!
(#[i"3:9IZ%nX<W-dV1VSDjoKaaX6DZT`CU#rZgbo&h!gPn!@I]bA&<ZZ/G'9[lf2tpni>:=!<;]CRDE
!k20I96ReSp+r<!N3"e,gf_"I=*h68pCA'u4/ZbSioI@Asf/;St1<RaEe<T%err=_C4ZXI7(:e0A8T4T
?P]A(he1_1D"KiE^Dn68SB<WGbgY5rQBl9##0Sh^7IoBZFi]3jFYt/Co7@HZ%@oJu48O)Y*\j$Z!hC'N
_)TS;I$i)6!h_Hn$,Kr;MN.JM.HBKen$\=TZ5J6c`i4BtOnWCc)h>Aen45)+uK.(:RW>Pg[#c4]!"-W1
4V^:HZBQfP$BW<!EA2k`.8C[>YE_g,)>,8T'M^*!U.RgS7<>Y^G'q:sjA@@W`DtMYHhX*kO/>W3ZNnEP
YJ?<C1$39(D9![][n[pfHm#Xo(%R53M7jB.9^iZ[bTb7+/9VL:=!8R8NoZt%gi,MWhL'NHKM%H5eC)Iu
fPG$'ZU"V^Cmo'Ummdu?K6-Q1e?XLH:rftBh<op(n^@s_[at?\j-/.8.q/nIcBc[^ac5G<20rm(2BLuf
#.fMC:<pUuO[!t+\N@^+/)[,)j1QQ?P&Du3u,e8"EabE27hLPpSU[$Tpd!O@!L:oY>kG[HeFCE9c7+(L
a[+\7PH:>`8@rg51Aj>Qkroa0\gX,KI]b7tf;)/$0:Gu!"!Kc6tW>pLQo8H_*r$<EsJ*70qp^V'a;k!K
brr=:NrrD`;5Q(^d%n.04='',9!$6*/f/<P,;-kSln3b_"E\HEJd-#?I!9=&spWZa5MY3ot$9jC=4H)f
#Vs=9^1OHrFni:Dkp%"a#^6YLNeAVC?~>
Q
q
[ 57.0000 0.00000 0.00000 65.0000 631.723 477.732 ] concat
<<
/ImageType 1
/Width 57  /Height 65
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [57 0 0 65 0 0]
/DataSource currentfile /ASCII85Decode filter /DCTDecode filter 
>> image
s4IA0!"_al8O`[\!WW3$!!*'"s4[N@!!ic5#6k>;#6tJ?#m^kH'FbHY$Odmc'+Yct)BU"@)B9_>,VCGe
+tOrY*%3`p/2/e81c-:%3B]>W4>&EH1B6)/6NIK"#n.1M(_$ok1*IV\1,:U?1,:U?1,:U?1,:U?1,:U?
1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,AmF!"fJ:5l`nI!?qLF&HMtG!WU(<*rl9A"T\W)!<E3$
z!!!!"!WrQ/"pYD?$4HmP!4<@<!W`B*!X&T/"U"r.!!.KK!WrE*&Hrdj0gQ!W;.0\RE>10ZOeE%*6F"?
A;UOtZ1LbBV#mqFa(`=5<-7:2j.Ps"@2`NfY6UX@47n?3D;cHat='/U/@q9._B4u!oF*)PJGBeCZK7nr
5LPUeEP*;,qQC!u,R\HRQV5C/hWN*81['d?O\@K2f_o0O6a2lBFdaQ^rf%8R-g>V&OjQ5OekiqC&o(2M
Hp@n@XqZ"J6*ru?D!<E3%!<E3%!<<*"!!!!"!WrQ/"pYD?$4HmP!4<C=!W`?*"9Sc3"U"r.!<RHF!<N?
8"9fr'"qj4!#@VTc+u4]T'LIqUZ,$_k1K*]W@WKj'(*k`q-1Mcg)&ahL-n-W'2E*TU3^Z;(7Rp!@8lJ\
h<``C+>%;)SAnPdkC3+K>G'A1VH@gd&KnbA=M2II[Pa.Q$R$jD;USO``Vl6SpZEppG[^WcW]#)A'`Q#s
>ai`&\eCE.%f\,!<j5f=akNM0qo(2MHp@n@XqZ#7L$j-M1!YGMH!'^JXqQ$T12VLoqEIW61/`8t`Hi42
K-\+?S>-BgY`Mo>T.o"Le'jI)p=8*#O!WN.N3hO9>30+XGgKF%U_j7j!f$'X1X:A21rm;^jqXNc"RLmI
XE((67i&U`$B%OqhL$jKf]s;pGUo_:&N3aqjYk>iRa1(#0bpk4fZN+A#qp`W*Q0e2n`N@FL6Lhe#TM1)
%\M!88q5nO>\0Ls<3@]KJHQ)WQ)csH!FJq&92C9<.3'7p=$D29^YF9YEgN#*/ik7/,#,]RhWG*p%UEI.
-I0_!'o?)M^7%UYP'Mng:?h#@8rn6grKjcT%%rH8W+2c-+cY[u^@<d]+MI3^T5$hj0h&($S8&k#J=7u<
hE>!8f-QVPh7OhCNAj1jFVO+&]fH]kU;enQO\[mubfd*#iF5]h;j&SlGXaldV&gHAZQnjbIWSmHqDEuK
^jDo+u)Op*r*/a7G?132El:RC9*3B/?%s0b?RV:8sMoJUkAGK^\K=Q"YgSSuX:jbCPoc5-pP=Ka%0oHo
9c@b1t^-$fSZ1Rs0Xa-8iZogPd8Nc`8I%Yb#p$.%'Fl@<t,um;+\V;;]'fRXH`r-TK?Ff3P2:5upUNI!
(#[i"3:9IZ%nX<W-dV1VSDjoKaaX6DZT`CU#rZgbo&h!gPn!@I]bA&<ZZ/G'9[lf2tpni>:=!<;]CRDE
!k20I96ReSp+r<!N3"e,gf_"I=*h68pCA'u4/ZbSioI@Asf/;St1<RaEe<T%err=_C4ZXI7(:e0A8T4T
?P]A(he1_1D"KiE^Dn68SB<WGbgY5rQBl9##0Sh^7IoBZFi]3jFYt/Co7@HZ%@oJu48O)Y*\j$Z!hC'N
_)TS;I$i)6!h_Hn$,Kr;MN.JM.HBKen$\=TZ5J6c`i4BtOnWCc)h>Aen45)+uK.(:RW>Pg[#c4]!"-W1
4V^:HZBQfP$BW<!EA2k`.8C[>YE_g,)>,8T'M^*!U.RgS7<>Y^G'q:sjA@@W`DtMYHhX*kO/>W3ZNnEP
YJ?<C1$39(D9![][n[pfHm#Xo(%R53M7jB.9^iZ[bTb7+/9VL:=!8R8NoZt%gi,MWhL'NHKM%H5eC)Iu
fPG$'ZU"V^Cmo'Ummdu?K6-Q1e?XLH:rftBh<op(n^@s_[at?\j-/.8.q/nIcBc[^ac5G<20rm(2BLuf
#.fMC:<pUuO[!t+\N@^+/)[,)j1QQ?P&Du3u,e8"EabE27hLPpSU[$Tpd!O@!L:oY>kG[HeFCE9c7+(L
a[+\7PH:>`8@rg51Aj>Qkroa0\gX,KI]b7tf;)/$0:Gu!"!Kc6tW>pLQo8H_*r$<EsJ*70qp^V'a;k!K
brr=:NrrD`;5Q(^d%n.04='',9!$6*/f/<P,;-kSln3b_"E\HEJd-#?I!9=&spWZa5MY3ot$9jC=4H)f
#Vs=9^1OHrFni:Dkp%"a#^6YLNeAVC?~>
Q
0 J
1.45000 M
newpath
431.401 394.411 m
643.123 476.321 l
S
newpath
650.584 479.208 m
641.196 470.215 l
642.190 475.960 l
637.588 479.541 l
h
f
newpath
531.545 405.451 m
531.545 406.358 l
530.514 406.358 l
530.128 406.358 529.860 406.436 529.709 406.592  c
529.558 406.748 529.482 407.030 529.482 407.436  c
529.482 408.014 l
531.264 408.014 l
531.264 408.858 l
529.482 408.858 l
529.482 414.576 l
528.404 414.576 l
528.404 408.858 l
527.373 408.858 l
527.373 408.014 l
528.404 408.014 l
528.404 407.561 l
528.404 406.832 528.574 406.298 528.912 405.959  c
529.251 405.621 529.790 405.451 530.529 405.451  c
531.545 405.451 l
h
532.332 411.983 m
532.332 408.014 l
533.410 408.014 l
533.410 411.951 l
533.410 412.566 533.533 413.030 533.777 413.342  c
534.022 413.655 534.384 413.811 534.863 413.811  c
535.447 413.811 535.908 413.626 536.246 413.256  c
536.585 412.886 536.754 412.378 536.754 411.733  c
536.754 408.014 l
537.832 408.014 l
537.832 414.576 l
536.754 414.576 l
536.754 413.561 l
536.494 413.967 536.191 414.267 535.848 414.459  c
535.504 414.652 535.103 414.748 534.645 414.748  c
533.884 414.748 533.309 414.514 532.918 414.045  c
532.527 413.576 532.332 412.889 532.332 411.983  c
h
545.516 410.608 m
545.516 414.576 l
544.438 414.576 l
544.438 410.655 l
544.438 410.030 544.315 409.563 544.070 409.256  c
543.826 408.949 543.464 408.795 542.984 408.795  c
542.401 408.795 541.940 408.980 541.602 409.350  c
541.263 409.720 541.094 410.227 541.094 410.873  c
541.094 414.576 l
540.016 414.576 l
540.016 408.014 l
541.094 408.014 l
541.094 409.030 l
541.354 408.634 541.659 408.339 542.008 408.147  c
542.357 407.954 542.760 407.858 543.219 407.858  c
543.969 407.858 544.539 408.089 544.930 408.553  c
545.320 409.017 545.516 409.701 545.516 410.608  c
h
552.387 408.264 m
552.387 409.280 l
552.074 409.102 551.767 408.972 551.465 408.889  c
551.163 408.806 550.856 408.764 550.543 408.764  c
549.835 408.764 549.288 408.985 548.902 409.428  c
548.517 409.871 548.324 410.493 548.324 411.295  c
548.324 412.097 548.517 412.720 548.902 413.162  c
549.288 413.605 549.835 413.826 550.543 413.826  c
550.856 413.826 551.163 413.785 551.465 413.701  c
551.767 413.618 552.074 413.493 552.387 413.326  c
552.387 414.326 l
552.085 414.462 551.772 414.566 551.449 414.639  c
551.126 414.712 550.783 414.748 550.418 414.748  c
549.428 414.748 548.642 414.438 548.059 413.819  c
547.475 413.199 547.184 412.358 547.184 411.295  c
547.184 410.233 547.478 409.394 548.066 408.780  c
548.655 408.165 549.465 407.858 550.496 407.858  c
550.819 407.858 551.139 407.892 551.457 407.959  c
551.775 408.027 552.085 408.128 552.387 408.264  c
h
555.328 406.155 m
555.328 408.014 l
557.547 408.014 l
557.547 408.858 l
555.328 408.858 l
555.328 412.420 l
555.328 412.951 555.401 413.293 555.547 413.444  c
555.693 413.595 555.990 413.670 556.438 413.670  c
557.547 413.670 l
557.547 414.576 l
556.438 414.576 l
555.604 414.576 555.029 414.420 554.711 414.108  c
554.393 413.795 554.234 413.233 554.234 412.420  c
554.234 408.858 l
553.453 408.858 l
553.453 408.014 l
554.234 408.014 l
554.234 406.155 l
555.328 406.155 l
h
558.955 408.014 m
560.033 408.014 l
560.033 414.576 l
558.955 414.576 l
558.955 408.014 l
h
558.955 405.451 m
560.033 405.451 l
560.033 406.826 l
558.955 406.826 l
558.955 405.451 l
h
564.836 408.764 m
564.263 408.764 563.807 408.990 563.469 409.444  c
563.130 409.897 562.961 410.514 562.961 411.295  c
562.961 412.087 563.128 412.707 563.461 413.155  c
563.794 413.602 564.253 413.826 564.836 413.826  c
565.409 413.826 565.865 413.600 566.203 413.147  c
566.542 412.694 566.711 412.076 566.711 411.295  c
566.711 410.524 566.542 409.910 566.203 409.451  c
565.865 408.993 565.409 408.764 564.836 408.764  c
h
564.836 407.858 m
565.773 407.858 566.510 408.162 567.047 408.772  c
567.583 409.381 567.852 410.222 567.852 411.295  c
567.852 412.368 567.583 413.212 567.047 413.826  c
566.510 414.441 565.773 414.748 564.836 414.748  c
563.898 414.748 563.162 414.441 562.625 413.826  c
562.089 413.212 561.820 412.368 561.820 411.295  c
561.820 410.222 562.089 409.381 562.625 408.772  c
563.162 408.162 563.898 407.858 564.836 407.858  c
h
575.100 410.608 m
575.100 414.576 l
574.022 414.576 l
574.022 410.655 l
574.022 410.030 573.899 409.563 573.654 409.256  c
573.410 408.949 573.048 408.795 572.568 408.795  c
571.985 408.795 571.524 408.980 571.186 409.350  c
570.847 409.720 570.678 410.227 570.678 410.873  c
570.678 414.576 l
569.600 414.576 l
569.600 408.014 l
570.678 408.014 l
570.678 409.030 l
570.938 408.634 571.243 408.339 571.592 408.147  c
571.941 407.954 572.344 407.858 572.803 407.858  c
573.553 407.858 574.123 408.089 574.514 408.553  c
574.904 409.017 575.100 409.701 575.100 410.608  c
h
581.424 408.201 m
581.424 409.233 l
581.122 409.076 580.807 408.959 580.479 408.881  c
580.150 408.803 579.809 408.764 579.455 408.764  c
578.924 408.764 578.523 408.845 578.252 409.006  c
577.981 409.168 577.846 409.415 577.846 409.748  c
577.846 409.998 577.942 410.194 578.135 410.334  c
578.328 410.475 578.716 410.608 579.299 410.733  c
579.658 410.826 l
580.429 410.983 580.976 411.212 581.299 411.514  c
581.622 411.816 581.783 412.233 581.783 412.764  c
581.783 413.378 581.541 413.863 581.057 414.217  c
580.572 414.571 579.908 414.748 579.065 414.748  c
578.710 414.748 578.343 414.714 577.963 414.647  c
577.583 414.579 577.184 414.477 576.768 414.342  c
576.768 413.217 l
577.163 413.425 577.554 413.582 577.940 413.686  c
578.325 413.790 578.710 413.842 579.096 413.842  c
579.596 413.842 579.984 413.756 580.260 413.584  c
580.536 413.412 580.674 413.165 580.674 412.842  c
580.674 412.550 580.575 412.326 580.377 412.170  c
580.179 412.014 579.747 411.863 579.080 411.717  c
578.705 411.639 l
578.038 411.493 577.557 411.274 577.260 410.983  c
576.963 410.691 576.815 410.295 576.815 409.795  c
576.815 409.170 577.033 408.691 577.471 408.358  c
577.908 408.024 578.528 407.858 579.330 407.858  c
579.726 407.858 580.101 407.886 580.455 407.944  c
580.809 408.001 581.132 408.087 581.424 408.201  c
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
643.622 503.433 m
545.720 464.176 l
452.580 425.354 l
S
newpath
445.196 422.276 m
454.348 431.508 l
453.503 425.738 l
458.196 422.277 l
h
f
newpath
540.284 499.043 m
540.159 498.981 540.026 498.931 539.886 498.895  c
539.745 498.858 539.586 498.840 539.409 498.840  c
538.805 498.840 538.339 499.038 538.011 499.434  c
537.683 499.830 537.519 500.402 537.519 501.152  c
537.519 504.606 l
536.441 504.606 l
536.441 498.043 l
537.519 498.043 l
537.519 499.059 l
537.748 498.663 538.045 498.369 538.409 498.176  c
538.774 497.983 539.217 497.887 539.737 497.887  c
539.810 497.887 539.891 497.892 539.980 497.902  c
540.068 497.913 540.165 497.928 540.269 497.949  c
540.284 499.043 l
h
547.030 501.059 m
547.030 501.574 l
542.062 501.574 l
542.114 502.324 542.340 502.892 542.741 503.277  c
543.142 503.663 543.697 503.856 544.405 503.856  c
544.822 503.856 545.226 503.806 545.616 503.707  c
546.007 503.608 546.395 503.455 546.780 503.246  c
546.780 504.277 l
546.385 504.434 545.984 504.556 545.577 504.645  c
545.171 504.733 544.760 504.777 544.343 504.777  c
543.301 504.777 542.473 504.473 541.859 503.863  c
541.244 503.254 540.937 502.428 540.937 501.387  c
540.937 500.314 541.228 499.462 541.812 498.832  c
542.395 498.202 543.176 497.887 544.155 497.887  c
545.041 497.887 545.741 498.171 546.257 498.738  c
546.773 499.306 547.030 500.080 547.030 501.059  c
h
545.952 500.731 m
545.942 500.147 545.775 499.678 545.452 499.324  c
545.129 498.970 544.702 498.793 544.171 498.793  c
543.567 498.793 543.085 498.965 542.726 499.309  c
542.366 499.652 542.161 500.132 542.109 500.746  c
545.952 500.731 l
h
552.976 498.231 m
552.976 499.262 l
552.674 499.106 552.359 498.988 552.030 498.910  c
551.702 498.832 551.361 498.793 551.007 498.793  c
550.476 498.793 550.075 498.874 549.804 499.035  c
549.533 499.197 549.398 499.444 549.398 499.777  c
549.398 500.027 549.494 500.223 549.687 500.363  c
549.879 500.504 550.267 500.637 550.851 500.762  c
551.210 500.856 l
551.981 501.012 552.528 501.241 552.851 501.543  c
553.174 501.845 553.335 502.262 553.335 502.793  c
553.335 503.408 553.093 503.892 552.609 504.246  c
552.124 504.600 551.460 504.777 550.616 504.777  c
550.262 504.777 549.895 504.744 549.515 504.676  c
549.135 504.608 548.736 504.507 548.319 504.371  c
548.319 503.246 l
548.715 503.455 549.106 503.611 549.491 503.715  c
549.877 503.819 550.262 503.871 550.648 503.871  c
551.148 503.871 551.536 503.785 551.812 503.613  c
552.088 503.441 552.226 503.194 552.226 502.871  c
552.226 502.580 552.127 502.356 551.929 502.199  c
551.731 502.043 551.299 501.892 550.632 501.746  c
550.257 501.668 l
549.590 501.522 549.109 501.303 548.812 501.012  c
548.515 500.720 548.366 500.324 548.366 499.824  c
548.366 499.199 548.585 498.720 549.023 498.387  c
549.460 498.053 550.080 497.887 550.882 497.887  c
551.278 497.887 551.653 497.915 552.007 497.973  c
552.361 498.030 552.684 498.116 552.976 498.231  c
h
554.931 502.012 m
554.931 498.043 l
556.009 498.043 l
556.009 501.981 l
556.009 502.595 556.131 503.059 556.376 503.371  c
556.621 503.684 556.983 503.840 557.462 503.840  c
558.045 503.840 558.506 503.655 558.845 503.285  c
559.183 502.915 559.353 502.408 559.353 501.762  c
559.353 498.043 l
560.431 498.043 l
560.431 504.606 l
559.353 504.606 l
559.353 503.590 l
559.092 503.996 558.790 504.296 558.446 504.488  c
558.103 504.681 557.702 504.777 557.243 504.777  c
556.483 504.777 555.907 504.543 555.517 504.074  c
555.126 503.606 554.931 502.918 554.931 502.012  c
h
562.646 495.481 m
563.724 495.481 l
563.724 504.606 l
562.646 504.606 l
562.646 495.481 l
h
567.058 496.184 m
567.058 498.043 l
569.276 498.043 l
569.276 498.887 l
567.058 498.887 l
567.058 502.449 l
567.058 502.981 567.131 503.322 567.276 503.473  c
567.422 503.624 567.719 503.699 568.167 503.699  c
569.276 503.699 l
569.276 504.606 l
568.167 504.606 l
567.334 504.606 566.758 504.449 566.441 504.137  c
566.123 503.824 565.964 503.262 565.964 502.449  c
565.964 498.887 l
565.183 498.887 l
565.183 498.043 l
565.964 498.043 l
565.964 496.184 l
567.058 496.184 l
h
574.872 498.231 m
574.872 499.262 l
574.570 499.106 574.255 498.988 573.927 498.910  c
573.599 498.832 573.258 498.793 572.903 498.793  c
572.372 498.793 571.971 498.874 571.700 499.035  c
571.429 499.197 571.294 499.444 571.294 499.777  c
571.294 500.027 571.390 500.223 571.583 500.363  c
571.776 500.504 572.164 500.637 572.747 500.762  c
573.107 500.856 l
573.877 501.012 574.424 501.241 574.747 501.543  c
575.070 501.845 575.232 502.262 575.232 502.793  c
575.232 503.408 574.989 503.892 574.505 504.246  c
574.021 504.600 573.357 504.777 572.513 504.777  c
572.159 504.777 571.791 504.744 571.411 504.676  c
571.031 504.608 570.633 504.507 570.216 504.371  c
570.216 503.246 l
570.612 503.455 571.002 503.611 571.388 503.715  c
571.773 503.819 572.159 503.871 572.544 503.871  c
573.044 503.871 573.432 503.785 573.708 503.613  c
573.984 503.441 574.122 503.194 574.122 502.871  c
574.122 502.580 574.023 502.356 573.825 502.199  c
573.627 502.043 573.195 501.892 572.528 501.746  c
572.153 501.668 l
571.487 501.522 571.005 501.303 570.708 501.012  c
570.411 500.720 570.263 500.324 570.263 499.824  c
570.263 499.199 570.482 498.720 570.919 498.387  c
571.357 498.053 571.976 497.887 572.778 497.887  c
573.174 497.887 573.549 497.915 573.903 497.973  c
574.258 498.030 574.581 498.116 574.872 498.231  c
h
f
2 J
10.0000 M
Q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore

%%Trailer
%%EOF
